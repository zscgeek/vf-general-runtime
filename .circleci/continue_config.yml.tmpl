version: 2.1

parameters:
  npm-repo:
    type: string
    default: "@voiceflow/general-runtime"
  container-image-url:
    type: string
    default: "168387678261.dkr.ecr.us-east-1.amazonaws.com/general-runtime"
  k8s-asset:
    type: string
    default: "deployment/general-runtime"
  k8s-namespace:
    type: string
    default: "voiceflow" # This is usually voiceflow
  ssh-fingerprint:
    type: string
    default: "SHA256:7FhWIIg1mYzFjcATPWZB3H9VVpUQihp2rQh1HFhPdks"
  track-component:
    type: string
    default: "general-runtime"

{{- $borsBranches := coll.Slice "trying" "staging" }}
{{- $masterProdBranches := coll.Slice "master" "prod" }}

# Reusable YAML chunks
defaults:
  bors_branches_filters: &bors_branches_filters
    branches:
      only:
        {{- range $borsBranches }}
        - {{ . }}
        {{- end }}

  slack-fail-post-step: &slack-fail-post-step
    post-steps:
      - vfcommon/notify_slack:
          channel: dev_general
          event: fail
          mentions: "@eng_platform"
          template: basic_fail_1
          branch_pattern: master

orbs:
  vfcommon: voiceflow/common@dev:799b467b4646afbe457fd8e3b0cad225ee383039
  sonarcloud: sonarsource/sonarcloud@2.0.0


jobs:
  test:
    executor: vfcommon/code-test-executor-node-20
    steps:
      - checkout
      - vfcommon/setup_dynamodb
      - vfcommon/docker_login
      - setup_remote_docker:
          version: default
      - run:
          name: Lint Dockerfile
          # hadolint comes from the executor image and is outdated
          command: hadolint ./Dockerfile
          background: true
      - vfcommon/staged_buildx:
          image_repo: << pipeline.parameters.container-image-url >>
          target: checks
          no_cache_filter: checks
          # OR output: ci-reports
          output: type=local,dest=ci-reports
          post_steps:
            - store_test_results:
                path: ci-reports
      - vfcommon/staged_buildx:
          image_repo: << pipeline.parameters.container-image-url >>
          image_tag: build
          target: build
          enable_cache_to: true
          pre_steps:
            - run: |
                # TODO: move this into dynamic var from generate-config job
                BRANCH="${CIRCLE_BRANCH//\//-}"
                NODE_VERSION=$(cat package.json | jq -r .volta.node | sed -E "s/^([0-9]+)(\.[0-9]+)?.*$/\1\2/g")
                cat - \<<EOF >/tmp/vf-staged_buildx-cache_from_to.env_var
                  EXTRA_BUILD_ARGS+=(--build-arg NODE_VERSION="${NODE_VERSION:-}")
                EOF
      - run:
          name: Integration tests
          command: |
            # Get the container id for kubernetes/pause, which is used as the shared network with secondary container services
            K8S_ID="$(docker container ls --format '{{`{{ .Image }} | {{ .ID }}`}}' | grep 'pause' | sed -E 's/^.* | (.*)$/\1/g' )"
            docker run \
              --rm -i \
              --network="container:${K8S_ID-}" \
              --entrypoint /bin/sh \
              << pipeline.parameters.container-image-url >>:build \<<EOF
              echo '127.0.0.1 creator-app.test.e2e postgres.test.e2e redis.test.e2e localstack.test.e2e mongodb.test.e2e server-data-api.test.e2e creator-api.test.e2e admin-api.test.e2e auth-api.test.e2e analytics-api.test.e2e billing-api.test.e2e identity-api.test.e2e luis-authoring-service.test.e2e integrations.test.e2e custom-api.test.e2e canvas-export.test.e2e alexa-runtime.test.e2e alexa-service.test.e2e general-runtime.test.e2e general-service.test.e2e google-runtime.test.e2e google-service.test.e2e realtime.test.e2e ingest.test.e2e event-ingestion-service.test.e2e billing-api.test.e2e identity-api.test.e2e auth-api.test.e2e runtime-api.test.e2e analytics-api.test.e2e admin-api.test.e2e test-api.test.e2e' >> /etc/hosts
              # Passthrough secrets
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              yarn test:integration
            EOF
  install_and_buildx:
    executor: vfcommon/node-executor-node-20
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - vfcommon/docker_login
      - vfcommon/authenticate_npm
      - vfcommon/staged_buildx:
          image_repo: << pipeline.parameters.container-image-url >>
          target: "deps"
          enable_cache_to: true
      - vfcommon/staged_buildx:
          image_repo: << pipeline.parameters.container-image-url >>
          image_tag: "build"
          target: "build"
          enable_cache_to: true


workflows:
  {{- if has $masterProdBranches .values.branch }}
  test-and-release:
  {{- else if has $borsBranches .values.branch }}
  e2e-tests:
  {{- else }}
  test:
  {{- end }}
    jobs:
      - install_and_buildx:
          <<: *slack-fail-post-step
          context: dev-test

      - test:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - install_and_buildx
          filters:
            branches:
              ignore:
                - production
                - /^break-glass.*$/

      - vfcommon/release:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - install_and_buildx
            - test
          filters:
            branches:
              only: master

      - vfcommon/update_track:
          context: dev-test
          image_repo: << pipeline.parameters.container-image-url >>
          component: << pipeline.parameters.track-component >>
          use_buildkit: true
          remote_docker_version: default
          requires:
            {{- if eq .values.branch "master" }}
            - test
            {{- end }}
            - install_and_buildx
            - vfcommon/release
          filters:
            branches:
              ignore:
                - /^break-glass.*$/

      - vfcommon/provision-env:
          context: dev-test
          env-name: {{ .values.e2e_env_name }}
          filters: *bors_branches_filters
      - vfcommon/prepare-env:
          context: dev-test
          env-name: {{ .values.e2e_env_name }}
          branch: {{ .values.branch }}
          tracked-components: << pipeline.parameters.track-component >>
          filters: *bors_branches_filters
          requires:
            - vfcommon/provision-env
            - vfcommon/update_track
      # - vfcommon/build-e2e-tests:
      #     context: dev-test
      #     filters: *bors_branches_filters

      # - vfcommon/run-e2e-tests:
      #     context: dev-test
      #     env-name: {{ .values.e2e_env_name }}
      #     requires:
      #       - vfcommon/build-e2e-tests
      #       - vfcommon/prepare-env
      #     filters: *bors_branches_filters
      - vfcommon/run-smoke-tests:
          context: dev-test
          e2e-env-name: {{ .values.e2e_env_name }}
          branch-or-commit: ci
          requires:
            # - vfcommon/build-e2e-tests
            - vfcommon/prepare-env
          filters: *bors_branches_filters
      - vfcommon/release-env:
          context: dev-test
          env-name: {{ .values.e2e_env_name }}
          requires:
            # - vfcommon/run-e2e-tests
            - vfcommon/run-smoke-tests
          filters: *bors_branches_filters

      - vfcommon/sync_branches:
          check_commit_message: "[bugfix]"
          ssh_key: << pipeline.parameters.ssh-fingerprint >>
          checkout: true
          context: dev-test
          name: sync-branches-bugfix
          requires:
            - install_and_buildx
            - test
            - vfcommon/release
          filters:
            branches:
              only: master

      - vfcommon/sync_branches:
          check_commit_message: "[breakglass]"
          ssh_key: << pipeline.parameters.ssh-fingerprint >>
          checkout: true
          context: dev-test
          name: sync-branches-break-glass
          requires:
            - install_and_buildx
          filters:
            branches:
              only: master

      - vfcommon/generate_technical_documentation:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - test
            - vfcommon/release
          filters:
            branches:
              only: master

      # Update Production branch
      - vfcommon/post_image_push_actions:
          namespace: << pipeline.parameters.k8s-namespace >>
          component: << pipeline.parameters.track-component >>
          tagged: true
          context: dev-test
          requires:
            - vfcommon/update_track
          filters:
            branches:
              only:
                - production
